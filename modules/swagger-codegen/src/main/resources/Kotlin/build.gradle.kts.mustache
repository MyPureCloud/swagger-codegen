import org.gradle.api.publish.maven.*

import groovy.lang.GroovyObject

description = "A Kotlin package to interface with the PureCloud Platform API"
java.sourceCompatibility = JavaVersion.VERSION_1_8

plugins {
    base
    kotlin("jvm") version "1.3.70" apply false
    java
    `maven-publish`
    `java-library`
    signing
    maven
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

allprojects {
    group = "{{groupId}}"
    version = "{{artifactVersion}}"
    repositories {
        jcenter()
    }
}

dependencies {
    // Marking these an testImplementation so they don't get added to the resulting pom that's deployed
    testImplementation(project(":api"))
    testImplementation(project(":core"))
    testImplementation(project(":model"))

    implementation("io.swagger:swagger-annotations:1.5.8")
    implementation("javax.xml.bind:jaxb-api:2.2.12")
    implementation("org.slf4j:slf4j-api:1.7.21")
    implementation("org.apache.httpcomponents:httpclient:4.5.2")
    implementation("com.squareup.okhttp:okhttp:2.7.0")
    implementation("org.asynchttpclient:async-http-client:2.0.35")
    implementation("xerces:xercesImpl:2.8.0")
    implementation("com.fasterxml.jackson.core:jackson-core:2.10.3")
    implementation("com.fasterxml.jackson.core:jackson-annotations:2.10.3")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.10.3")
    implementation("com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.10.3")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-joda:2.1.5")
    implementation("joda-time:joda-time:2.9.3")
    implementation("com.brsanthu:migbase64:2.2")
    implementation("org.opensaml:opensaml:2.5.3")
    implementation("com.neovisionaries:nv-websocket-client:1.31")
    implementation("com.google.guava:guava:21.0")
    implementation("org.threeten:threetenbp:1.4.3")
    testImplementation("org.testng:testng:6.14.3")
    testImplementation("org.mockito:mockito-core:1.10.19")

    // Make the root project archives configuration depend on every subproject
    subprojects.forEach {
        archives(it)
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.jar {
    from("api/build/classes/kotlin/main/")
    from("core/build/classes/kotlin/main")
    from("extensions/build/classes/kotlin/main")
    from("model/build/classes/kotlin/main")
}

val sourcesJar by tasks.registering(Jar::class) {
    setClassifier("sources")

    from("api/src/main/kotlin")
    from("core/src/main/kotlin")
    from("extensions/src/main/kotlin")
    from("model/src/main/kotlin")
}

val testsJar by tasks.registering(Jar::class) {
    archiveClassifier.set("tests")
    from(sourceSets["test"].output)
}

publishing {
    publications.create<MavenPublication>("mavenJava") {
        from(components["java"])
    }
}

signing {
    sign(publishing.publications["mavenJava"])
}

tasks.register("publishSDK") {
    // TODO Add maven publish task and call it from here
    outputs.upToDateWhen { false }
    // dependsOn("")
}
