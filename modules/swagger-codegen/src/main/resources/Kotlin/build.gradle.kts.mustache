
import org.gradle.api.publish.maven.*

import org.jfrog.gradle.plugin.artifactory.dsl.PublisherConfig
import org.jfrog.gradle.plugin.artifactory.dsl.ResolverConfig

import groovy.lang.GroovyObject

description = "A Kotlin package to interface with the PureCloud Platform API"
java.sourceCompatibility = JavaVersion.VERSION_1_8

plugins {
    base
    kotlin("jvm") version "1.3.70" apply false
    java
    `maven-publish`
    `java-library`
    signing
    id("com.jfrog.artifactory") version "4.18.0"
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

allprojects {
    // from swagger
//    group = "{{groupId}}"
   // version = "{{artifactVersion}}"
    version = "2.0.0"
    repositories {
        jcenter()
    }
}

dependencies {
    implementation(project(":api"))
    implementation(project(":core"))
    implementation(project(":model"))

    // Make the root project archives configuration depend on every subproject
    subprojects.forEach {
        archives(it)
    }
}

val testsJar by tasks.registering(Jar::class) {
    archiveClassifier.set("tests")
    from(sourceSets["test"].output)
}

java {
    withSourcesJar()
}

publishing {
    publications.create<MavenPublication>("maven") {
        artifact(file("$rootDir/build/distributions/${rootProject.name}-$version.jar"))
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}


tasks.create<Zip>("generateJar") {
    description = "Archives the resource pack output"
    group = "Archive"
    archiveExtension.set("jar")

    from("api/build/classes/kotlin/main/")
    from("core/build/classes/kotlin/main")
    from("extensions/build/classes/kotlin/main")
    from("model/build/classes/kotlin/main")
}

signing {
    sign(tasks["generateJar"])
}

artifactory {
    setContextUrl("https://purecloud.jfrog.io/purecloud/inin-release")
    publish(delegateClosureOf<PublisherConfig> {
        repository(delegateClosureOf<GroovyObject> {
            setProperty("repoKey", "/com/mypurecloud/")
//            setProperty("username", project.findProperty("artifactory_user") ?: "nouser")
//            setProperty("password", project.findProperty("artifactory_password") ?: "nopass")
            setProperty("maven", true)
        })
        defaults(delegateClosureOf<GroovyObject> {
            invokeMethod("publications", "maven")
        })
    })
//    resolve(delegateClosureOf<ResolverConfig> {
//        setProperty("repoKey", "repo")
//    })
}
