group = "{{groupId}}"
version = "{{artifactVersion}}"
description = "A Kotlin package to interface with the PureCloud Platform API"
java.sourceCompatibility = JavaVersion.VERSION_1_8

plugins {
    base
    kotlin("jvm") version "1.3.70" apply false
    java
    `maven-publish`
    `java-library`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

allprojects {
    group = "org.gradle.kotlin.dsl.samples.multiproject"
    version = "1.0"
    repositories {
        jcenter()
    }
}

dependencies {
    compile(project(":api"))
    compile(project(":core"))
    compile(project(":model"))
    // Make the root project archives configuration depend on every subproject
    subprojects.forEach {
        archives(it)
    }
}

val testsJar by tasks.registering(Jar::class) {
    archiveClassifier.set("tests")
    from(sourceSets["test"].output)
}

java {
    withSourcesJar()
}

//publishing {
//    publications.create<MavenPublication>("maven") {
//        from(components["java"])
//        artifact(testsJar)
//    }
//}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.test {
    useTestNG()
}

tasks.create<Zip>("zip") {
    description = "Archives the resource pack output"
    group = "Archive"
    archiveExtension.set("jar")

    from("api/build/classes/kotlin/main/")
    from("core/build/classes/kotlin/main")
    from("extensions/build/classes/kotlin/main")
    from("model/build/classes/kotlin/main")
}